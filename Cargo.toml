[package]
name = "leptos-ws-pro"
version = "0.11.1"
edition = "2021"
rust-version = "1.75"
license = "MIT"
authors = ["Cloud Shuttle Team"]
description = "ðŸš€ Production-ready WebSocket library for Leptos with multi-transport support, enterprise security, high performance, and reactive integration. All core functionality implemented and tested!"
documentation = "https://docs.rs/leptos-ws-pro/latest/"
repository = "https://github.com/cloud-shuttle/leptos-ws-pro"
keywords = ["leptos", "websocket", "rpc", "reactive", "performance"]
categories = [
    "wasm",
    "web-programming",
    "web-programming::http-client",
    "web-programming::http-server",
    "web-programming::websocket",
]
readme = "README.md"

[dependencies]
# Core Leptos integration
leptos = { version = "0.8.8", default-features = false }
leptos-use = { version = "0.16.2", default-features = false, features = [
    "use_websocket",
] }

# Serialization and zero-copy
serde = { version = "1", features = ["derive"] }
serde_json = "1"
rkyv = { version = "0.7", features = ["std", "size_32", "validation"] }
rkyv_dyn = "0.7"

# Async runtime and networking
async-trait = "0.1"
futures = { version = "0.3", features = ["std"], optional = true }
futures-util = { version = "0.3", features = ["std"], optional = true }
tokio = { version = "1.47", features = ["full"], optional = true }

# WebSocket and transport
gloo-net = { version = "0.6", optional = true }
eventsource-stream = { version = "0.1", optional = true }
web-sys = { version = "0.3", optional = true, features = [
    "WebSocket",
    "MessageEvent",
    "CloseEvent",
    "ErrorEvent",
] }

# WASM support
wasm-bindgen = { version = "0.2", optional = true }
wasm-bindgen-futures = { version = "0.4", optional = true }
js-sys = { version = "0.3", optional = true }

# HTTP and WebTransport
reqwest = { version = "0.12", features = ["json", "stream"], optional = true }
wtransport = { version = "0.6.1", optional = true }
h3 = { version = "0.0.8", optional = true }
quinn = { version = "0.10", optional = true }
hyper = { version = "1.7", features = ["full"], optional = true }
hyper-util = { version = "0.1", optional = true }
async-stream = { version = "0.3", optional = true }

# Server frameworks
axum = { version = "0.8", optional = true }
tower = { version = "0.5", optional = true }
tower-http = { version = "0.6", optional = true }

# WebSocket implementations
tokio-tungstenite = { version = "0.27", optional = true }

# Data structures and concurrency
dashmap = { version = "6.1", optional = true }
crossbeam-channel = { version = "0.5", optional = true }

# Cryptography and compression
ring = { version = "0.17", optional = true }
zstd = { version = "0.13", optional = true }
flate2 = { version = "1.0", optional = true }

# Error handling
thiserror = "2.0"

# Logging and observability
tracing = { version = "0.1", optional = true }
tracing-subscriber = { version = "0.3", optional = true }
metrics = { version = "0.24", optional = true }
metrics-exporter-prometheus = { version = "0.17", optional = true }

# Authentication
jsonwebtoken = { version = "9.3", optional = true }

# Collaboration features
num-bigint = { version = "0.4", optional = true }
json-patch = { version = "4.0", optional = true }

# Advanced RPC features
uuid = { version = "1.18", features = ["v4"], optional = true }
rand = { version = "0.9", optional = true }

# Development and testing
tempfile = { version = "3.21", optional = true }
criterion = { version = "0.7", features = ["html_reports"], optional = true }

[features]
default = ["client", "server", "compression", "metrics", "dep:futures", "dep:tracing", "dep:num-bigint", "dep:uuid", "dep:rand"]

# Platform support
client = ["gloo-net", "web-sys", "reqwest"]
server = ["dep:tokio", "axum", "dep:tower", "dep:tower-http", "dep:tokio-tungstenite", "dep:futures-util"]
ssr = ["leptos/ssr", "dep:tokio", "dep:futures"]
wasm = ["web-sys", "dep:wasm-bindgen", "dep:wasm-bindgen-futures", "dep:js-sys"]

# Transport protocols
websocket = ["client", "server"]
webtransport = ["client", "dep:hyper", "reqwest", "dep:wtransport", "dep:h3", "dep:quinn"]
sse = ["client", "reqwest", "dep:eventsource-stream", "dep:hyper", "dep:hyper-util", "dep:async-stream"]
adaptive = ["websocket", "sse", "webtransport"]

# Performance and features
compression = ["dep:zstd", "dep:flate2"]
zero-copy = ["rkyv/std"]
simd = ["dep:ring"]
collaboration = ["dep:num-bigint", "dep:json-patch"]
auth = ["dep:jsonwebtoken"]
encryption = ["dep:ring"]
metrics = ["dep:metrics", "dep:metrics-exporter-prometheus"]
tracing = ["dep:tracing", "dep:tracing-subscriber"]

# Advanced RPC features
advanced-rpc = ["dep:uuid"]

# Development and testing
dev = ["dep:tempfile", "dep:criterion", "dep:rand"]
testing = ["dep:tempfile"]

# Server framework integration
axum = ["dep:axum", "dep:tower", "dep:tower-http"]
warp = ["dep:tower", "dep:tower-http"]
actix = ["dep:tower", "dep:tower-http"]

# Leptos features
islands = ["leptos/islands"]

[[example]]
name = "websocket-basic"
path = "examples/basic/websocket-basic.rs"

[[example]]
name = "websocket-connection"
path = "examples/basic/websocket-connection.rs"

[[test]]
name = "websocket_connection_tests"
path = "tests/unit/websocket_connection_tests.rs"


[[test]]
name = "transport_layer_tests"
path = "tests/unit/transport_layer_tests.rs"

[[test]]
name = "rpc_system_tests"
path = "tests/unit/rpc_system_tests.rs"

[[test]]
name = "advanced_features_tests"
path = "tests/unit/advanced_features_tests.rs"

[[test]]
name = "real_websocket_tests"
path = "tests/integration/real_websocket_tests.rs"

[[test]]
name = "webtransport_tests"
path = "tests/integration/webtransport_tests.rs"

[[test]]
name = "real_websocket_implementation_tests"
path = "tests/unit/real_websocket_implementation_tests.rs"

[[test]]
name = "webtransport_implementation_tests"
path = "tests/unit/webtransport_implementation_tests.rs"

[[test]]
name = "sse_implementation_tests"
path = "tests/unit/sse_implementation_tests.rs"

[[test]]
name = "adaptive_transport_tests"
path = "tests/unit/adaptive_transport_tests.rs"

[[test]]
name = "comprehensive_transport_tests"
path = "tests/unit/comprehensive_transport_tests.rs"

[[test]]
name = "advanced_rpc_tests"
path = "tests/unit/advanced_rpc_tests.rs"

[[test]]
name = "advanced_rpc_simple_tests"
path = "tests/unit/advanced_rpc_simple_tests.rs"

[[test]]
name = "compilation_warnings_tests"
path = "tests/unit/compilation_warnings_tests.rs"

[[test]]
name = "real_websocket_network_tests"
path = "tests/unit/real_websocket_network_tests.rs"

[[test]]
name = "real_sse_network_tests"
path = "tests/unit/real_sse_network_tests.rs"

[[test]]
name = "real_webtransport_network_tests"
path = "tests/unit/real_webtransport_network_tests.rs"

[[test]]
name = "real_network_integration_tests"
path = "tests/unit/real_network_integration_tests.rs"

[[test]]
name = "load_testing_tests"
path = "tests/unit/load_testing_tests.rs"

[[test]]
name = "performance_benchmark_tests"
path = "tests/unit/performance_benchmark_tests.rs"

[[test]]
name = "stress_testing_tests"
path = "tests/unit/stress_testing_tests.rs"

# V1.0 TDD Test Suite
[[test]]
name = "v1_core_transport_tests"
path = "tests/unit/v1_core_transport_tests.rs"

[[test]]
name = "v1_core_codec_tests"
path = "tests/unit/v1_core_codec_tests.rs"

[[test]]
name = "v1_core_rpc_tests"
path = "tests/unit/v1_core_rpc_tests.rs"

[[test]]
name = "v1_core_reactive_tests"
path = "tests/unit/v1_core_reactive_tests.rs"

[[test]]
name = "v1_integration_tests"
path = "tests/integration/v1_integration_tests.rs"

[[test]]
name = "quick_validation"
path = "tests/quick_validation.rs"

[[test]]
name = "simple_error_recovery_tests"
path = "tests/unit/simple_error_recovery_tests.rs"

[[test]]
name = "simple_performance_tests"
path = "tests/unit/simple_performance_tests.rs"

# Advanced TDD Test Suites
[[test]]
name = "advanced_transport_tdd_tests"
path = "tests/unit/advanced_transport_tdd_tests.rs"

[[test]]
name = "complex_error_recovery_tdd_tests"
path = "tests/unit/complex_error_recovery_tdd_tests.rs"

# Contract Testing
[[test]]
name = "schema_validation_tests"
path = "tests/contract/schema_validation_tests.rs"

[[test]]
name = "api_contract_tests"
path = "tests/contract/api_contract_tests.rs"

[[test]]
name = "backward_compatibility_tests"
path = "tests/contract/backward_compatibility_tests.rs"

# Transport Layer Tests
[[test]]
name = "performance_edge_cases_tdd_tests"
path = "tests/unit/performance_edge_cases_tdd_tests.rs"

# [[bench]]
# name = "codec_bench"
# harness = false
# required-features = ["dev"]

[dev-dependencies]
tempfile = "3.21"
criterion = { version = "0.7", features = ["html_reports"] }
tokio = { version = "1.47", features = ["full"] }
tokio-tungstenite = "0.27"
futures = "0.3"
chrono = { version = "0.4", features = ["serde"] }
base64 = "0.22"

# Contract testing dependencies
jsonschema = "0.18"
serde_yaml = "0.9"
