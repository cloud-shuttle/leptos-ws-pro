openapi: 3.0.3
info:
  title: Leptos WS Pro API
  description: |
    Production-ready WebSocket library for Leptos with transport layer, RPC system,
    and advanced features like reconnection and heartbeat.

    This API provides:
    - Multiple transport protocols (WebSocket, WebTransport, SSE)
    - Type-safe RPC system
    - Reactive integration with Leptos
    - Advanced error recovery and circuit breaker patterns
    - Performance optimization features
  version: 1.0.0
  contact:
    name: Leptos WS Pro Team
    url: https://github.com/leptos-ws-pro/leptos-ws-pro
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: ws://localhost:8080
    description: Development WebSocket server
  - url: wss://api.example.com
    description: Production WebSocket server
  - url: https://api.example.com
    description: Production HTTP/HTTPS server (for SSE and WebTransport)

paths:
  /ws:
    get:
      summary: WebSocket Connection
      description: Establish a WebSocket connection for real-time communication
      parameters:
        - name: protocol
          in: query
          description: Transport protocol to use
          required: false
          schema:
            type: string
            enum: [websocket, webtransport, sse, adaptive]
            default: websocket
        - name: codec
          in: query
          description: Message codec to use
          required: false
          schema:
            type: string
            enum: [json, rkyv, hybrid, compressed]
            default: json
        - name: heartbeat_interval
          in: query
          description: Heartbeat interval in milliseconds
          required: false
          schema:
            type: integer
            minimum: 1000
            maximum: 60000
            default: 30000
      responses:
        '101':
          description: WebSocket connection established
          headers:
            Upgrade:
              schema:
                type: string
                example: websocket
            Connection:
              schema:
                type: string
                example: Upgrade
        '400':
          description: Bad request - invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /rpc:
    post:
      summary: RPC Method Call
      description: Execute a remote procedure call
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RpcRequest'
      responses:
        '200':
          description: RPC response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RpcResponse'
        '400':
          description: Bad request - invalid RPC request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: RPC execution error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /subscribe:
    post:
      summary: Subscribe to Messages
      description: Subscribe to real-time message updates
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscribeRequest'
      responses:
        '200':
          description: Subscription established
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscribeResponse'
        '400':
          description: Bad request - invalid subscription
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /health:
    get:
      summary: Health Check
      description: Check the health status of the service
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'

components:
  schemas:
    # Core Message Types
    Message:
      type: object
      required:
        - data
        - message_type
      properties:
        data:
          type: string
          format: byte
          description: Message payload as base64-encoded bytes
        message_type:
          $ref: '#/components/schemas/MessageType'
        timestamp:
          type: integer
          format: int64
          description: Unix timestamp in milliseconds
        correlation_id:
          type: string
          description: Optional correlation ID for request tracking

    MessageType:
      type: string
      enum:
        - text
        - binary
        - json
        - rkyv
        - heartbeat
        - error
      description: Type of message content

    # Transport Types
    TransportConfig:
      type: object
      required:
        - url
      properties:
        url:
          type: string
          format: uri
          description: WebSocket server URL
        protocol:
          $ref: '#/components/schemas/TransportProtocol'
        codec:
          $ref: '#/components/schemas/CodecType'
        heartbeat_interval:
          type: integer
          minimum: 1000
          maximum: 60000
          default: 30000
          description: Heartbeat interval in milliseconds
        reconnect_attempts:
          type: integer
          minimum: 0
          maximum: 10
          default: 5
          description: Maximum reconnection attempts
        reconnect_delay:
          type: integer
          minimum: 1000
          maximum: 30000
          default: 5000
          description: Reconnection delay in milliseconds

    TransportProtocol:
      type: string
      enum:
        - websocket
        - webtransport
        - sse
        - adaptive
      description: Transport protocol to use

    CodecType:
      type: string
      enum:
        - json
        - rkyv
        - hybrid
        - compressed
      description: Message codec to use

    ConnectionState:
      type: string
      enum:
        - disconnected
        - connecting
        - connected
        - reconnecting
        - failed
      description: Current connection state

    # RPC Types
    RpcRequest:
      type: object
      required:
        - id
        - method
        - params
      properties:
        id:
          type: string
          description: Unique request identifier
        method:
          $ref: '#/components/schemas/RpcMethod'
        params:
          type: object
          description: Method parameters
        timeout:
          type: integer
          minimum: 1000
          maximum: 30000
          default: 10000
          description: Request timeout in milliseconds

    RpcResponse:
      type: object
      required:
        - id
        - result
      properties:
        id:
          type: string
          description: Request identifier matching the request
        result:
          type: object
          description: Method result
        error:
          $ref: '#/components/schemas/RpcError'

    RpcMethod:
      type: string
      enum:
        - SendMessage
        - GetMessages
        - SubscribeMessages
        - UnsubscribeMessages
        - GetConnectionState
        - GetServerInfo
        - Heartbeat
        - Ping
      description: Available RPC methods

    RpcError:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          description: Error code
        message:
          type: string
          description: Error message
        data:
          type: object
          description: Additional error data

    # Subscription Types
    SubscribeRequest:
      type: object
      required:
        - subscription_id
        - params
      properties:
        subscription_id:
          type: string
          description: Unique subscription identifier
        params:
          $ref: '#/components/schemas/SubscribeMessagesParams'
        callback_url:
          type: string
          format: uri
          description: Optional callback URL for notifications

    SubscribeResponse:
      type: object
      required:
        - subscription_id
        - status
      properties:
        subscription_id:
          type: string
          description: Subscription identifier
        status:
          type: string
          enum: [active, pending, failed]
          description: Subscription status
        expires_at:
          type: integer
          format: int64
          description: Subscription expiration timestamp

    SubscribeMessagesParams:
      type: object
      properties:
        room_id:
          type: string
          description: Room identifier for message filtering
        message_types:
          type: array
          items:
            $ref: '#/components/schemas/MessageType'
          description: Message types to subscribe to
        user_id:
          type: string
          description: User identifier for personal messages

    # Error Types
    ErrorResponse:
      type: object
      required:
        - error
        - message
      properties:
        error:
          type: string
          description: Error type
        message:
          type: string
          description: Error message
        code:
          type: integer
          description: Error code
        details:
          type: object
          description: Additional error details
        timestamp:
          type: integer
          format: int64
          description: Error timestamp

    TransportError:
      type: object
      required:
        - error_type
        - message
      properties:
        error_type:
          type: string
          enum:
            - ConnectionFailed
            - ConnectionClosed
            - SendFailed
            - ReceiveFailed
            - Timeout
            - ProtocolError
            - AuthenticationFailed
        message:
          type: string
          description: Error message
        retry_after:
          type: integer
          description: Suggested retry delay in milliseconds

    # Health and Monitoring
    HealthResponse:
      type: object
      required:
        - status
        - timestamp
      properties:
        status:
          type: string
          enum: [healthy, degraded, unhealthy]
          description: Service health status
        timestamp:
          type: integer
          format: int64
          description: Health check timestamp
        version:
          type: string
          description: Service version
        uptime:
          type: integer
          description: Service uptime in seconds
        connections:
          type: integer
          description: Active connections count
        metrics:
          $ref: '#/components/schemas/ServiceMetrics'

    ServiceMetrics:
      type: object
      properties:
        messages_sent:
          type: integer
          description: Total messages sent
        messages_received:
          type: integer
          description: Total messages received
        active_connections:
          type: integer
          description: Current active connections
        error_rate:
          type: number
          format: float
          description: Error rate percentage
        average_response_time:
          type: number
          format: float
          description: Average response time in milliseconds

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token for authentication

    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
      description: API key for authentication

security:
  - BearerAuth: []
  - ApiKeyAuth: []

tags:
  - name: Transport
    description: WebSocket transport layer operations
  - name: RPC
    description: Remote procedure call operations
  - name: Subscriptions
    description: Real-time message subscriptions
  - name: Health
    description: Service health and monitoring
